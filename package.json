{
  "name": "nest_clinic",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build && npm run sentry:sourcemaps",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:docker:db": "docker compose --env-file ./environments/local.env -f docker-compose.db.yaml up --build",
    "start:local": "nest start --watch -e \"node --env-file ./environments/local.env\"",
    "start:dev": "nest start --watch -e \"node --env-file ./environments/dev.env\"",
    "start:prod": "node dist/main -e \"node --env-file ./environments/prod.env\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "start:debug": "nest start --debug --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prepare": "husky",
    "typeorm": "typeorm-ts-node-commonjs --dataSource ./ormconfig.ts",
    "migration:create": "cross-var npm run typeorm -- migration:create ./src/database/migrations/$npm_config_name",
    "migration:generate": "cross-var npm run typeorm -- migration:generate  ./src/database/migrations/$npm_config_name",
    "migration:revert": "npm run typeorm -- migration:revert",
    "migration:run": "npm run typeorm -- migration:run",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org vladyslav-ra --project node-nestjs ./out && sentry-cli sourcemaps upload --org vladyslav-ra --project node-nestjs ./out"
  },
  "dependencies": {
    "@2toad/profanity": "^3.0.0",
    "@aws-sdk/client-s3": "^3.645.0",
    "@eslint/eslintrc": "^3.3.1",
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/common": "10.4.18",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "10.4.18",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/platform-express": "^10.4.15",
    "@nestjs/schedule": "^4.1.1",
    "@nestjs/serve-static": "^4.0.2",
    "@nestjs/swagger": "^7.4.0",
    "@sentry/cli": "^2.40.0",
    "@sentry/nestjs": "^9.24.0",
    "@sentry/node": "^9.24.0",
    "@sentry/profiling-node": "^8.47.0",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cross-var": "^1.1.0",
    "date-fns": "^4.1.0",
    "handlebars": "^4.7.8",
    "ioredis": "^5.4.1",
    "multer": "2.0.0",
    "next": "^15.3.3",
    "nodemailer": "^6.9.15",
    "pg": "^8.12.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "sharp": "^0.33.5",
    "typeorm": "^0.3.20",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.27.5",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@nestjs/typeorm": "^10.0.2",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.17.57",
    "@types/nodemailer": "^6.4.15",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "eslint": "^8.57.1",
    "eslint-config-next": "^15.3.3",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.30.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "husky": "^9.1.5",
    "jest": "^29.5.0",
    "lint-staged": "^15.2.10",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "lint-staged": {
    "{src,apps,libs,test}/**/*.ts": "eslint --fix"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
